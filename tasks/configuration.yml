---
- name: create the ssl folder for rabbitmq
  file:
    path=/etc/rabbitmq/ssl/
    owner=rabbitmq
    group=rabbitmq
    mode=0750
    state=directory
  when: rabbitmq_ssl

- name: pull ssl certificates from s3
  s3:
    bucket: "{{ rabbitmq_ssl_s3_bucket }}"
    object: "{{ rabbitmq_ssl_s3_path }}/{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: get
  with_items:
    - src: "{{ rabbitmq_cacert | basename }}"
      dest: "{{ rabbitmq_conf_ssl_options_cacertfile }}"
    - src: "{{ rabbitmq_server_key | basename }}"
      dest: "{{ rabbitmq_conf_ssl_options_keyfile }}"
    - src: "{{ rabbitmq_server_cert | basename }}"
      dest: "{{ rabbitmq_conf_ssl_options_certfile }}"
  when: rabbitmq_ssl_from_s3

- name: copy the ssl certificates
  copy:
    src={{ item.src }}
    dest={{ item.dest }}
    owner=rabbitmq
    group=rabbitmq
    mode=0640
    backup=yes
  with_items:
    - src: "{{ rabbitmq_cacert }}"
      dest: "{{ rabbitmq_conf_ssl_options_cacertfile }}"
    - src: "{{ rabbitmq_server_key }}"
      dest: "{{ rabbitmq_conf_ssl_options_keyfile }}"
    - src: "{{ rabbitmq_server_cert }}"
      dest: "{{ rabbitmq_conf_ssl_options_certfile }}"
  when: rabbitmq_ssl and not rabbitmq_ssl_from_s3

- name: set erlang cookie
  template: src=erlang.cookie.j2 dest=/var/lib/rabbitmq/.erlang.cookie owner=rabbitmq group=rabbitmq mode=0400 backup=yes
  when: rabbitmq_cluster

- name: generate the configuration of rabbitmq
  template:
    src=rabbitmq.config.j2
    dest=/etc/rabbitmq/rabbitmq.config
    owner=rabbitmq
    group=rabbitmq
    mode=0644
    backup=yes
  notify: restart rabbitmq-server

- name: generate environment-specific configuration
  template:
    src=rabbitmq-env.conf.j2
    dest=/etc/rabbitmq/rabbitmq-env.conf
    owner=rabbitmq
    group=rabbitmq
    mode=0644
    backup=yes
  notify: restart rabbitmq-server
  when: rabbitmq_conf_env is defined
